# ---------------------------------------------------------------------------- #
## \file package.yml
## \author Sebastien Beaugrand
## \sa http://beaugrand.chez.com/
## \copyright CeCILL 2.1 Free Software license
# ---------------------------------------------------------------------------- #
stages:
  - build
  - test
  - package
  - install
  - rbuild
  - rpackage
  - rinstall
  - deploy
build:
  stage: build
  except:
    variables:
      - $PACKAGE =~ '/^lib/'
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make --no-print-directory clean
    - make --no-print-directory
package:
  stage: package
  except:
    variables:
      - $PACKAGE =~ '/^lib/'
  script:
    - export DEBEMAIL=seb@localhost
    - export DEBFULLNAME=seb
    - mkdir -p build/$PROJECT-$VERSION/data
    - cd build/$PROJECT-$VERSION
    - dh_make --native --single --yes || true
    - echo "data/$PROJECT /usr/bin/" >debian/$PROJECT.install
    - cp -a ../$PROJECT data/$PROJECT
    - test ! -d ../../debian || cp -a ../../debian/* debian/
    - dpkg-buildpackage --no-sign
install:
  stage: install
  script:
    - sudo apt-get reinstall -y ./build/${PROJECT}_${VERSION}_amd64.deb
rbuild:
  stage: rbuild
  script:
    - export PROPATH=$(basename `readlink -f .`)
    - cd ../$VM
    - rsync -a -i -f '- build' ../$PROPATH/ .vagrant/$PROPATH/
    - rsync -a -i -f '- build' ../makefiles/ .vagrant/makefiles/
    - vagrant ssh -c "cd /vagrant/.vagrant/$PROPATH && make build"
rpackage:
  stage: rpackage
  script:
    - export PROPATH=$(basename `readlink -f .`)
    - cd ../$VM
    - rsync -a -i -f '- build' ../$PROPATH/ .vagrant/$PROPATH/
    - rsync -a -i -f '- build' ../makefiles/ .vagrant/makefiles/
    - vagrant ssh -c "cd /vagrant/.vagrant/$PROPATH && make package"
rinstall:
  stage: rinstall
  script:
    - export PROPATH=$(basename `readlink -f .`)
    - cd ../$VM
    - vagrant ssh -c "cd /vagrant/.vagrant/$PROPATH && sudo apt-get reinstall -y ./build/${PROJECT}_${VERSION}_amd64.deb"
deploy:
  image: ubuntu:22.10
  stage: deploy
  script:
    - export PROPATH=$(basename `readlink -f .`)
    - cd ../$VM/.vagrant/$PROPATH
    - cp -a build/${PROJECT}_${VERSION}_amd64.deb ../../../$PROPATH/build/
    - test -z "$DEP" || cp -a $DEP ../../../$PROPATH/build/
    - cd -
    - apt update
    - apt-get install -y $DEP ./build/${PROJECT}_${VERSION}_amd64.deb
    - ldd -d -r /usr/bin/$PROJECT
