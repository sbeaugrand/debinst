diff --git a/.gitignore b/.gitignore
index 53abf74..b69eb15 100644
--- a/.gitignore
+++ b/.gitignore
@@ -57,3 +57,6 @@ lib
 gen
 win32-deps
 **/*.dir/*
+
+.pc
+obj-x86_64-linux-gnu
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 961e55a..a347d9c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,13 +18,13 @@ cmake_policy(SET CMP0012 NEW)
 
 if (${CMAKE_MAJOR_VERSION} GREATER 2)
     # old policy do not use MACOSX_RPATH
-    cmake_policy(SET CMP0042 OLD)
+    #cmake_policy(SET CMP0042 OLD)
 endif()
 
 set(MAJOR_VERSION 1)
 set(MINOR_VERSION 4)
 set(PATCH_VERSION 1)
-set(SO_VERSION    1)
+set(SO_VERSION    0)
 
 if(NOT MSVC)
 	set(BUILD_SHARED_LIBS YES CACHE BOOL "Build shared libraries")
diff --git a/cmake/CMakeDependencies.cmake b/cmake/CMakeDependencies.cmake
index d355a09..c94ed1a 100644
--- a/cmake/CMakeDependencies.cmake
+++ b/cmake/CMakeDependencies.cmake
@@ -38,5 +38,5 @@ if (${REDIS_SERVER} OR ${REDIS_CLIENT})
     message(STATUS "Hiredis lib   : ${HIREDIS_LIBRARIES}")
 endif()
 
-find_package(Threads REQUIRED)
-find_package(Doxygen)
\ No newline at end of file
+#find_package(Threads REQUIRED)
+find_package(Doxygen)
diff --git a/cmake/FindArgtable.cmake b/cmake/FindArgtable.cmake
index 9728dbd..78e83bb 100644
--- a/cmake/FindArgtable.cmake
+++ b/cmake/FindArgtable.cmake
@@ -35,6 +35,6 @@ endif()
 # handle the QUIETLY and REQUIRED arguments and set JSONCPP_FOUND to TRUE
 # if all listed variables are TRUE, hide their existence from configuration view
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(argtable DEFAULT_MSG ARGTABLE_INCLUDE_DIR ARGTABLE_LIBRARY)
+find_package_handle_standard_args(Argtable DEFAULT_MSG ARGTABLE_INCLUDE_DIR ARGTABLE_LIBRARY)
 mark_as_advanced (ARGTABLE_INCLUDE_DIR ARGTABLE_LIBRARY)
 
diff --git a/cmake/FindJsoncpp.cmake b/cmake/FindJsoncpp.cmake
index 7b2bf1b..bace9e4 100644
--- a/cmake/FindJsoncpp.cmake
+++ b/cmake/FindJsoncpp.cmake
@@ -69,5 +69,5 @@ endif()
 # handle the QUIETLY and REQUIRED arguments and set JSONCPP_FOUND to TRUE
 # if all listed variables are TRUE, hide their existence from configuration view
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(jsoncpp DEFAULT_MSG JSONCPP_INCLUDE_DIR JSONCPP_LIBRARY)
+find_package_handle_standard_args(Jsoncpp DEFAULT_MSG JSONCPP_INCLUDE_DIR JSONCPP_LIBRARY)
 mark_as_advanced (JSONCPP_INCLUDE_DIR JSONCPP_LIBRARY)
diff --git a/cmake/FindMHD.cmake b/cmake/FindMHD.cmake
index 23e31c4..9ad6c9f 100755
--- a/cmake/FindMHD.cmake
+++ b/cmake/FindMHD.cmake
@@ -34,6 +34,6 @@ if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
 endif()
 
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(mhd DEFAULT_MSG MHD_INCLUDE_DIR MHD_LIBRARY)
+find_package_handle_standard_args(MHD DEFAULT_MSG MHD_INCLUDE_DIR MHD_LIBRARY)
 mark_as_advanced(MHD_INCLUDE_DIR MHD_LIBRARY)
 
diff --git a/debian/changelog b/debian/changelog
index 41ec659..2797f1a 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,9 @@
+libjson-rpc-cpp (1.4.1-1.0) unstable; urgency=medium
+
+  * Non-maintainer upload.
+
+ -- sbeaugrand <sbeaugrand@toto.org>  Thu, 20 Jun 2024 12:12:00 +0200
+
 libjson-rpc-cpp (0.7.0-2.1) unstable; urgency=medium
 
   * Non-maintainer upload.
diff --git a/debian/compat b/debian/compat
deleted file mode 100644
index ec63514..0000000
--- a/debian/compat
+++ /dev/null
@@ -1 +0,0 @@
-9
diff --git a/debian/control b/debian/control
index 3132a13..7782711 100644
--- a/debian/control
+++ b/debian/control
@@ -3,9 +3,8 @@ Section: libs
 Priority: optional
 Maintainer: Peter Spiess-Knafl <dev@spiessknafl.at>
 Build-Depends:
- catch,
  cmake,
- debhelper (>= 9),
+ debhelper-compat (= 12),
  libargtable2-dev,
  libcurl4-openssl-dev | libcurl4-nss-dev,
  libjsoncpp-dev,
diff --git a/debian/libjsonrpccpp-client0.lintian-overrides b/debian/libjsonrpccpp-client0.lintian-overrides
deleted file mode 100644
index bd8f98f..0000000
--- a/debian/libjsonrpccpp-client0.lintian-overrides
+++ /dev/null
@@ -1,4 +0,0 @@
-# This is a C++ project, we use .shlibs instead
-# API/ABI compatibilty is watched tediously upstream since version 0.4
-# Report: http://upstream.rosalinux.ru/versions/libjson-rpc-cpp.html
-no-symbols-control-file
diff --git a/debian/libjsonrpccpp-common0.lintian-overrides b/debian/libjsonrpccpp-common0.lintian-overrides
deleted file mode 100644
index bd8f98f..0000000
--- a/debian/libjsonrpccpp-common0.lintian-overrides
+++ /dev/null
@@ -1,4 +0,0 @@
-# This is a C++ project, we use .shlibs instead
-# API/ABI compatibilty is watched tediously upstream since version 0.4
-# Report: http://upstream.rosalinux.ru/versions/libjson-rpc-cpp.html
-no-symbols-control-file
diff --git a/debian/libjsonrpccpp-server0.lintian-overrides b/debian/libjsonrpccpp-server0.lintian-overrides
deleted file mode 100644
index bd8f98f..0000000
--- a/debian/libjsonrpccpp-server0.lintian-overrides
+++ /dev/null
@@ -1,4 +0,0 @@
-# This is a C++ project, we use .shlibs instead
-# API/ABI compatibilty is watched tediously upstream since version 0.4
-# Report: http://upstream.rosalinux.ru/versions/libjson-rpc-cpp.html
-no-symbols-control-file
diff --git a/debian/libjsonrpccpp-stub0.lintian-overrides b/debian/libjsonrpccpp-stub0.lintian-overrides
deleted file mode 100644
index bd8f98f..0000000
--- a/debian/libjsonrpccpp-stub0.lintian-overrides
+++ /dev/null
@@ -1,4 +0,0 @@
-# This is a C++ project, we use .shlibs instead
-# API/ABI compatibilty is watched tediously upstream since version 0.4
-# Report: http://upstream.rosalinux.ru/versions/libjson-rpc-cpp.html
-no-symbols-control-file
diff --git a/debian/patches/0001-Fix-spelling-mistakes.patch b/debian/patches/0001-Fix-spelling-mistakes.patch
deleted file mode 100644
index 73f93c1..0000000
--- a/debian/patches/0001-Fix-spelling-mistakes.patch
+++ /dev/null
@@ -1,53 +0,0 @@
-From 781ed34bee122a9c56fe776420d963be454c94fc Mon Sep 17 00:00:00 2001
-From: Peter Spiess-Knafl <peter.knafl@gmail.com>
-Date: Tue, 16 Aug 2016 09:32:26 +0200
-Subject: [PATCH] Fix spelling mistakes
-
----
- src/jsonrpccpp/client/connectors/unixdomainsocketclient.cpp | 2 +-
- src/jsonrpccpp/common/specificationparser.cpp               | 2 +-
- src/jsonrpccpp/server/connectors/httpserver.cpp             | 2 +-
- 3 files changed, 3 insertions(+), 3 deletions(-)
-
-diff --git a/src/jsonrpccpp/client/connectors/unixdomainsocketclient.cpp b/src/jsonrpccpp/client/connectors/unixdomainsocketclient.cpp
-index 585e88d..160ef1b 100644
---- a/src/jsonrpccpp/client/connectors/unixdomainsocketclient.cpp
-+++ b/src/jsonrpccpp/client/connectors/unixdomainsocketclient.cpp
-@@ -44,7 +44,7 @@ void UnixDomainSocketClient::SendRPCMessage(const std::string& message, std::str
- 	socket_fd = socket(AF_UNIX, SOCK_STREAM, 0);
- 	if (socket_fd < 0)
- 	{
--		throw JsonRpcException(Errors::ERROR_CLIENT_CONNECTOR, "Could not created unix domain socket");
-+        throw JsonRpcException(Errors::ERROR_CLIENT_CONNECTOR, "Could not create unix domain socket");
- 	}
- 
- 	memset(&address, 0, sizeof(sockaddr_un));
-diff --git a/src/jsonrpccpp/common/specificationparser.cpp b/src/jsonrpccpp/common/specificationparser.cpp
-index e900431..29890b7 100644
---- a/src/jsonrpccpp/common/specificationparser.cpp
-+++ b/src/jsonrpccpp/common/specificationparser.cpp
-@@ -44,7 +44,7 @@ vector<Procedure>   SpecificationParser::GetProceduresFromString(const string &c
-         GetProcedure(val[i], proc);
-         if (procnames.find(proc.GetProcedureName()) != procnames.end())
-         {
--            throw JsonRpcException(Errors::ERROR_SERVER_PROCEDURE_SPECIFICATION_SYNTAX, "Procedurename not uniqe: " + proc.GetProcedureName());
-+            throw JsonRpcException(Errors::ERROR_SERVER_PROCEDURE_SPECIFICATION_SYNTAX, "Procedurename not unique: " + proc.GetProcedureName());
-         }
-         procnames[proc.GetProcedureName()] = proc;
-         result.push_back(proc);
-diff --git a/src/jsonrpccpp/server/connectors/httpserver.cpp b/src/jsonrpccpp/server/connectors/httpserver.cpp
-index 5ec15a2..40d3c5e 100644
---- a/src/jsonrpccpp/server/connectors/httpserver.cpp
-+++ b/src/jsonrpccpp/server/connectors/httpserver.cpp
-@@ -147,7 +147,7 @@ int HttpServer::callback(void *cls, MHD_Connection *connection, const char *url,
-             if (handler == NULL)
-             {
-                 client_connection->code = MHD_HTTP_INTERNAL_SERVER_ERROR;
--                client_connection->server->SendResponse("No client conneciton handler found", client_connection);
-+                client_connection->server->SendResponse("No client connection handler found", client_connection);
-             }
-             else
-             {
--- 
-2.8.1
-
diff --git a/debian/patches/0002-Fix-FTBFS-with-libmicrohttpd-0.9.71.patch b/debian/patches/0002-Fix-FTBFS-with-libmicrohttpd-0.9.71.patch
deleted file mode 100644
index 8d8754a..0000000
--- a/debian/patches/0002-Fix-FTBFS-with-libmicrohttpd-0.9.71.patch
+++ /dev/null
@@ -1,77 +0,0 @@
-From: Baptiste Beauplat <lyknode@cilg.org>
-Date: Thu, 8 Oct 2020 22:44:11 +0200
-Subject: Fix FTBFS with libmicrohttpd 0.9.71
-
-Closes: #964592
-Bug: https://github.com/cinemast/libjson-rpc-cpp/issues/298
----
- src/jsonrpccpp/server/connectors/httpserver.cpp | 2 +-
- src/jsonrpccpp/server/connectors/httpserver.h   | 2 +-
- src/test/testhttpserver.cpp                     | 4 ++--
- src/test/testhttpserver.h                       | 4 ++--
- 4 files changed, 6 insertions(+), 6 deletions(-)
-
-diff --git a/src/jsonrpccpp/server/connectors/httpserver.cpp b/src/jsonrpccpp/server/connectors/httpserver.cpp
-index 40d3c5e..d1bad41 100644
---- a/src/jsonrpccpp/server/connectors/httpserver.cpp
-+++ b/src/jsonrpccpp/server/connectors/httpserver.cpp
-@@ -119,7 +119,7 @@ void HttpServer::SetUrlHandler(const string &url, IClientConnectionHandler *hand
-     this->SetHandler(NULL);
- }
- 
--int HttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
-+MHD_Result HttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
- {
-     (void)version;
-     if (*con_cls == NULL)
-diff --git a/src/jsonrpccpp/server/connectors/httpserver.h b/src/jsonrpccpp/server/connectors/httpserver.h
-index 075962c..0f66423 100644
---- a/src/jsonrpccpp/server/connectors/httpserver.h
-+++ b/src/jsonrpccpp/server/connectors/httpserver.h
-@@ -71,7 +71,7 @@ namespace jsonrpc
- 
-             std::map<std::string, IClientConnectionHandler*> urlhandler;
- 
--            static int callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
-+            static MHD_Result callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
- 
-             IClientConnectionHandler* GetHandler(const std::string &url);
- 
-diff --git a/src/test/testhttpserver.cpp b/src/test/testhttpserver.cpp
-index 7e240a6..c31440a 100644
---- a/src/test/testhttpserver.cpp
-+++ b/src/test/testhttpserver.cpp
-@@ -47,7 +47,7 @@ std::string TestHttpServer::GetHeader(const std::string &key)
-     return "";
- }
- 
--int TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
-+MHD_Result TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
- {
-     (void)upload_data;
-     (void)upload_data_size;
-@@ -73,7 +73,7 @@ int TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *
-     return MHD_YES;
- }
- 
--int TestHttpServer::header_iterator(void *cls, MHD_ValueKind kind, const char *key, const char *value)
-+MHD_Result TestHttpServer::header_iterator(void *cls, MHD_ValueKind kind, const char *key, const char *value)
- {
-     (void)kind;
-     TestHttpServer* _this = static_cast<TestHttpServer*>(cls);
-diff --git a/src/test/testhttpserver.h b/src/test/testhttpserver.h
-index 5521e11..9545aee 100644
---- a/src/test/testhttpserver.h
-+++ b/src/test/testhttpserver.h
-@@ -36,9 +36,9 @@ namespace jsonrpc {
-             std::map<std::string,std::string> headers;
-             std::string response;
- 
--            static int callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
-+            static MHD_Result callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
- 
--            static int header_iterator (void *cls, enum MHD_ValueKind kind, const char *key, const char *value);
-+            static MHD_Result header_iterator (void *cls, enum MHD_ValueKind kind, const char *key, const char *value);
-     };
- 
- } // namespace jsonrpc
diff --git a/debian/patches/series b/debian/patches/series
index 473b2b0..e69de29 100644
--- a/debian/patches/series
+++ b/debian/patches/series
@@ -1,2 +0,0 @@
-0001-Fix-spelling-mistakes.patch
-0002-Fix-FTBFS-with-libmicrohttpd-0.9.71.patch
diff --git a/debian/rules b/debian/rules
index bc9fc4e..79040f3 100755
--- a/debian/rules
+++ b/debian/rules
@@ -9,9 +9,15 @@ override_dh_auto_configure:
 		-DCMAKE_INSTALL_PREFIX=/usr \
 		-DBUILD_SHARED_LIBS=YES \
 		-DBUILD_STATIC_LIBS=YES \
-		-DCOMPILE_EXAMPLES=YES \
-		-DCOMPILE_STUBGEN=YES
+		-DCOMPILE_STUBGEN=YES \
+		-DCOMPILE_TESTS=NO \
+		-DCOMPILE_EXAMPLES=NO \
+		-DREDIS_SERVER=NO \
+		-DREDIS_CLIENT=NO \
+		-DFILE_DESCRIPTOR_SERVER=NO \
+		-DFILE_DESCRIPTOR_CLIENT=NO \
+		-DWITH_COVERAGE=NO
 
 override_dh_strip:
-	dh_strip --dbgsym-migration='libjsonrpccpp-common0-dbg (<< 0.7.0-2~), libjsonrpccpp-server0-dbg (<< 0.7.0-2~), libjsonrpccpp-client0-dbg (<< 0.7.0-2~), libjsonrpccpp-stub0-dbg (<< 0.7.0-2~)'
+	dh_strip --dbgsym-migration='libjsonrpccpp-common0-dbg (<< 1.4.1-1~), libjsonrpccpp-server0-dbg (<< 1.4.1-1~), libjsonrpccpp-client0-dbg (<< 1.4.1-1~), libjsonrpccpp-stub0-dbg (<< 1.4.1-1~)'
 
diff --git a/debian/upstream/metadata b/debian/upstream/metadata
index dbc219d..beae315 100644
--- a/debian/upstream/metadata
+++ b/debian/upstream/metadata
@@ -3,7 +3,5 @@ Bug-Submit: https://github.com/cinemast/libjson-rpc-cpp/issues/new
 Changelog: https://github.com/cinemast/libjson-rpc-cpp/blob/master/CHANGELOG.md
 Contact: Peter Spiess-Knafl <psk@autistici.org>
 Name: libjson-rpc-cpp
-Homepage: https://github.com/cinemast/libjson-rpc-cpp/
 Repository: https://github.com/cinemast/libjson-rpc-cpp/
 Repository-Browse: https://github.com/cinemast/libjson-rpc-cpp/
-
diff --git a/debian/upstream/signing-key.asc b/debian/upstream/signing-key.asc
deleted file mode 100644
index 529bbdc..0000000
--- a/debian/upstream/signing-key.asc
+++ /dev/null
@@ -1,78 +0,0 @@
------BEGIN PGP PUBLIC KEY BLOCK-----
-Version: GnuPG v1
-
-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
-24aMG1TFZxwvYNREnwwH/7FxsHVCkrlv6A==
-=Hb2q
------END PGP PUBLIC KEY BLOCK-----
diff --git a/doc/manpage.in b/doc/manpage.in
index f1d5e23..3a727a1 100644
--- a/doc/manpage.in
+++ b/doc/manpage.in
@@ -40,7 +40,7 @@ with their corresponding parameters and return values contained in a top\-level
 
 .PP
 The literal in each \fB"params"\fP and  \fB"returns"\fP section defines the corresponding type.
-If the \fb"params"\fP contains an array, the parameters are accepted by position,
+If the \fB"params"\fP contains an array, the parameters are accepted by position,
 if it contains an object, they are accepted by name.
 
 .SH OPTIONS
