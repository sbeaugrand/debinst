# ---------------------------------------------------------------------------- #
## \file gitlab-ci.yml
## \author Sebastien Beaugrand
## \sa http://beaugrand.chez.com/
## \copyright CeCILL 2.1 Free Software license
# ---------------------------------------------------------------------------- #
stages:
  - build
  - package
  - xbuild
  - xpackage
  - xdeploy
variables:
  PROJECT: libjsonrpccpp
  VERSION: 1.4.1
  URL: https://github.com/cinemast/libjson-rpc-cpp
  CMAKE: cmake libjson-rpc-cpp
  BDIR: build
  XCVER: 12
  XCDIR: /data
  PRIVKEY: $HOME/.ssh/id_rsa
  APT: apt-get -y -o APT::Sandbox::User=root
.keychain:
  script:
    - >
      test ! -f $PRIVKEY || test -d /run/lock/.keychain ||
      TMPDIR=/run/lock keychain --dir /run/lock --nogui $PRIVKEY
    - test ! -f $PRIVKEY || source /run/lock/.keychain/*-sh
build:
  stage: build
  script:
    - >
      test -d /usr/share/doc/libargtable2-dev ||
      sudo apt install libargtable2-dev
    - >
      test -d /usr/share/doc/libcurl4-openssl-dev ||
      sudo apt install libcurl4-openssl-dev
    - >
      test -d /usr/share/doc/libjsoncpp-dev ||
      sudo apt install libjsoncpp-dev
    - >
      test -d /usr/share/doc/libmicrohttpd-dev ||
      sudo apt install libmicrohttpd-dev
    - mkdir -p $BDIR
    - cd $BDIR
    - test -d libjson-rpc-cpp || git clone $URL
    - cd libjson-rpc-cpp
    - grep -q XC CMakeLists.txt || git apply ../../libjson-rpc-cpp.patch
    - cd ..
    - >
      $CMAKE
      -DCOMPILE_TESTS=NO
      -DCOMPILE_EXAMPLES=NO
      -DREDIS_SERVER=NO
      -DREDIS_CLIENT=NO
      -DFILE_DESCRIPTOR_SERVER=NO
      -DFILE_DESCRIPTOR_CLIENT=NO
    - make
package:
  stage: package
  script:
    - export DEBEMAIL=$DEBEMAIL
    - export DEBFULLNAME=$DEBFULLNAME
    - >
      test -n "$DEBEMAIL" ||
      export DEBEMAIL=`git config --global --get user.email`
    - >
      test -n "$DEBFULLNAME" ||
      export DEBFULLNAME=`git config --global --get user.name`
    - mkdir -p $BDIR/$PROJECT-$VERSION/data
    - cd $BDIR/$PROJECT-$VERSION
    - dh_make --native --single --yes || true
    - test ! -d ../../debian || cp -a ../../debian/* debian/
    - |
      sed -i '/^Description: /,${d}' debian/control
    - cat debian/control.in >>debian/control
    - |
      sed -i 's/Section: .*/Section: libdevel/' debian/control
    - |
      sed -i "s#Homepage: .*#Homepage: $URL#" debian/control
    - cp -a ../libjson-rpc-cpp/src/jsonrpccpp data/
    - find data -type f -not -name "*.h" -exec rm {} \;
    - cp -a ../gen/jsonrpccpp/common/jsonparser.h data/jsonrpccpp/common/
    - >
      find .. -name data -prune -false -o
      -name "*.so.$VERSION" -exec cp -a {} data/ \;
    - >
      find .. -name data -prune -false -o
      -name "*.pc" -exec cp -a {} data/ \;
    - >
      find .. -name data -prune -false -o
      -name "libjson-rpc-cpp*.cmake" -exec cp -a {} data/ \;
    - >
      find .. -name data -prune -false -o
      -name "jsonrpcstub.1" -exec cp -a {} data/ \;
    - >
      find .. -name data -prune -false -o
      -name "jsonrpcstub" -exec cp -a {} data/ \;
    - SOURCE_DATE_EPOCH=`date +%s` dpkg-buildpackage --no-sign $OPTS
xbuild:
  stage: xbuild
  extends: build
  variables:
    XC: aarch64-linux-gnu
  before_script:
    - BDIR=build-$XC
    - CMAKE="$CMAKE -DXC=$XC -DXCVER=$XCVER -DXCDIR=$XCDIR"
xpackage:
  stage: xpackage
  extends: package
  variables:
    XC: aarch64-linux-gnu
  before_script:
    - BDIR=build-$XC
    - test "$XC" != "aarch64-linux-gnu" || ARCH=arm64
    - test "$XC" != "arm-linux-gnueabihf" || ARCH=armhf
    - CONFIG_SITE=/etc/dpkg-cross/cross-config.$ARCH
    - OPTS=-a$ARCH
    - export DEB_BUILD_OPTIONS=nocheck
    - export XC=$XC
    - export XCVER=$XCVER
    - export XCDIR=$XCDIR
    - export CC=$XC
xdeploy:
  stage: xdeploy
  variables:
    XC: aarch64-linux-gnu
  script:
    - !reference [.keychain, script]
    - BDIR=build-$XC
    - $SCP $BDIR/${PROJECT}_${VERSION}_*.deb $URI:/run/user/1000/
    - test -n "$SUDOPASS" || read -s SUDOPASS
    - >
      $SSH "cd /run/user/1000 && echo $SUDOPASS | sudo -S true && echo &&
      $APT reinstall ./${PROJECT}_${VERSION}_*.deb"
